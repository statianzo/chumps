<h1>Stocks!</h1>
<p id="notify" >None</p>
<div id="stocks">
  <% stocks.each do |name, value| %>
    <h2><%= name %></h2>
    <div class="value" id="<%= "#{name.downcase}-price" %>"><%= value %></div>
    <div class="chart" id="<%= "#{name.downcase}" %>"></div>
  <% end %>
</div>

<script>
  (function($){

    var es = new EventSource('/stocks')
      , max = 20
      , aapl= initChart('#aapl', 600)
      , msft= initChart('#msft', 100);


    es.addEventListener('AAPL', function(e){
      var value = Math.abs(e.data);
      aapl.update(value);
    });

    es.addEventListener('MSFT', function(e){
      var value = Math.abs(e.data);
      msft.update(value);
    });

    //Notice that GOOG doesn't update
    //Because we didn't subscribe

    es.onmessage = function(e) {
      $('#notify').innerText = e.data;
      $('#notify').className = e.data.toLowerCase();
    };

    function initChart(id, yMax) {
      var self = {
        chart: d3.select(id).append("svg")
          .attr("class", "chart")
          .attr("width", max * 20)
          .attr("height", 140),
        x: d3.scale.linear().domain([0, 1]).range([0, 20]),
        y: d3.scale.linear().domain([0, yMax]).rangeRound([0, 140]),
        priceEl: $(id + '-price'),
        data: [],
        time: 0,
        update: function(val) {
          self.priceEl.innerText = val;
          self.data.length === max && self.data.shift();
          self.data.push({ data: val, time: ++self.time});
          redrawChart(self);
        }
      };

      return self;
    }

    function redrawChart(chart) {
      var y = chart.y
        , x = chart.x
        , data = chart.data
        , t = chart.time
        , rect = chart.chart.selectAll("rect")
            .data(data, function(d) { return d.time; });

      rect.enter().insert("rect")
      .attr("x", function(d, i) { if(data.length == max && t > max) { return x(i + 1); } return x(i); })
        .attr("y", function(d) { return 140 - y(d.data); })
        .attr("width", 20)
        .attr("height", function(d) { return y(d.data); })
      .transition()
        .duration(500)
        .attr("x", function(d, i) { return x(i) });

        rect.transition()
          .duration(500)
          .attr("x", function(d, i) { return x(i); });

          rect.exit().transition()
            .duration(500)
            .attr("x", function(d, i) { return x(i-1) })
            .remove();
    }
  })(function(id){return document.getElementById(id.replace('#',''))});
</script>
